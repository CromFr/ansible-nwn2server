

- name: Check caddy installation
  stat:
    path: /usr/local/bin/caddy
  register: caddybin

- name: Download caddy archive
  when: caddybin.stat.exists == False
  get_url:
    url: "https://caddyserver.com/download/linux/amd64?plugins={{caddy_plugins | join(',')}}"
    dest: /tmp/caddy.tar.gz

- file:
    path: /tmp/caddy
    state: directory

- name: Extract caddy archive
  when: caddybin.stat.exists == False
  unarchive:
    remote_src: yes
    src: /tmp/caddy.tar.gz
    dest: /tmp/caddy/

- name: Install caddy binary
  when: caddybin.stat.exists == False
  copy:
    remote_src: yes
    src: /tmp/caddy/caddy
    dest: /usr/local/bin/

- name: Install caddy service
  when: caddybin.stat.exists == False
  copy:
    remote_src: yes
    src: /tmp/caddy/init/linux-systemd/caddy.service
    dest: /etc/systemd/system/caddy.service

- name: Caddy user
  user:
    name: www-data

- name: Create Caddyfile
  file:
    path: /etc/Caddyfile
    state: touch

- name: Enable & start caddy service
  systemd:
    name: caddy.service
    state: started
    enabled: yes

- name: Caddy cleanup
  when: caddybin.stat.exists == False
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - /tmp/caddy.tar.gz
    - /tmp/caddy




- name: "UFW: Enable HTTP(S) ports"
  ufw:
    rule: allow
    port: "{{item}}"
  with_items: [ 80, 443 ]