

- name: Qemu network packages install
  apt:
    name:
      - dnsmasq

- name: Create TAP device
  copy:
    dest: /etc/systemd/network/tap0.netdev
    content: |
      [NetDev]
      Name=tap0
      Kind=tap
  register: tap0_netdev

- name: Set TAP address
  copy:
    dest: /etc/systemd/network/tap0.network
    content: |
      [Match]
      Name=tap0

      [Link]
      MACAddress=02:00:00:00:00:{{"%02x" | format(nwn2server_private_ip.split(".")[3] | int)}}
      RequiredForOnline=no

      [Network]
      Description=QEMU dedicated network
      Address={{qemu_tap_network.split('.')[0:3] | join('.')}}.1/24
      LinkLocalAddressing=ipv4
      IPForward=ipv4
      IPMasquerade=yes
      ConfigureWithoutCarrier=yes
      IgnoreCarrierLoss=yes
  register: tap0_network

- name: Reload network config
  systemd:
    name: "systemd-networkd.service"
    state: restarted
  when: tap0_netdev.changed or tap0_network.changed

# TODO: Find a more elegant way to configure tap0
- name: Setup service for configuring tap0 interface &  routing
  copy:
    dest: /etc/systemd/system/tap0-configure.service
    content: |
      [Unit]
      Description=Set IP address on tap0
      After=systemd-networkd-wait-online.service
      Before=dnsmasq.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStartPre=-/sbin/ip addr add {{qemu_tap_network.split('.')[0:3] | join('.')}}.1/24 dev tap0
      ExecStartPre=/bin/bash -c " \
        (iptables -t nat -A POSTROUTING -o {{ansible_default_ipv4.interface}} -j MASQUERADE \
          || iptables -t nat -A POSTROUTING -o {{ansible_default_ipv4.interface}} -j MASQUERADE) \
        && \
        (iptables -C FORWARD -i tap0 -o {{ansible_default_ipv4.interface}} -j ACCEPT \
          || iptables -A FORWARD -i tap0 -o {{ansible_default_ipv4.interface}} -j ACCEPT) \
        "
      ExecStart=/sbin/ip link set tap0 up

      [Install]
      RequiredBy=multi-user.target

- name: Enable & start tap0 set ip service
  systemd:
    name: "tap0-configure.service"
    state: started
    enabled: yes

- name: Configure dnsmasq for DNS + DHCP
  blockinfile:
    path: /etc/dnsmasq.d/qemu-tap0
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK: tap0 DNS server"
    block: |
      interface=tap0
      except-interface=lo
      listen-address={{qemu_tap_network.split('.')[0:3] | join('.')}}.1
      bind-interfaces
      cache-size=1000

      dhcp-option=6,{{qemu_tap_network.split('.')[0:3] | join('.')}}.1 # DNS server
      dhcp-range={{qemu_tap_network.split('.')[0:3] | join('.')}}.100,{{qemu_tap_network.split('.')[0:3] | join('.')}}.200,255.255.255.0
      dhcp-authoritative

- name: Enable & start dnsmasq
  systemd:
    name: "dnsmasq.service"
    state: started
    enabled: yes

# TODO: Would be better to have a more restricted access to the host.
#       This is the quick & easy solution for letting NFS packets through.
- name: "UFW: configure firewall for tap0"
  ufw:
    rule: allow
    interface: tap0
    direction: in
